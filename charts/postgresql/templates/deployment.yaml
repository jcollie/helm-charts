apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: database
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        component: database
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsUser: 70
        runAsGroup: 70
        fsGroup: 70
      initContainers:
        - name: chown
          image: docker.io/library/busybox:1.33.1
          imagePullPolicy: Always
          command:
            - "chown"
            - "-Rc"
            - "70:70"
            - "/var/lib/postgresql"
          volumeMounts:
            - name: library
              mountPath: /var/lib/postgresql
            - name: library
              mountPath: /var/lib/postgresql/data
              subPath: data
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
              add:
                - CHOWN
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "50m"
              memory: "64Mi"
      containers:
        - name: postgresql
          image: {{ .Values.postgresql.image }}
          imagePullPolicy: Always
          env:
            - name: "TZ"
              value: "{{ .Values.timezone }}"
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}-postgresql
            - secretRef:
                name: {{ .Release.Name }}-pgbackrest
          volumeMounts:
            - name: run
              mountPath: /run
            - name: tmp
              mountPath: /tmp
            - name: initdb
              mountPath: /docker-entrypoint-initdb.d
            - name: library
              mountPath: /var/lib/postgresql
            - name: library
              mountPath: /var/lib/postgresql/data
              subPath: data
          {{- with .Values.postgresql.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
              add:
                - CHOWN
      volumes:
        - name: run
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: initdb
          configMap:
            name: {{ .Release.Name }}-initdb
        - name: library
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-library
