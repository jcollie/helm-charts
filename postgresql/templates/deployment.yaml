apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: database
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsUser: 70
        runAsGroup: 70
        fsGroup: 70
      containers:
        - name: postgresql
          image: {{ .Values.postgresql.image }}
          imagePullPolicy: Always
          env:
            - name: "TZ"
              value: "{{ .Values.timezone }}"
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}-postgresql
            - secretRef:
                name: {{ .Release.Name }}-pgbackrest
          volumeMounts:
            - name: run
              mountPath: /run
            - name: tmp
              mountPath: /tmp
            - name: initdb
              mountPath: /docker-entrypoint-initdb.d
            - name: library
              mountPath: /var/lib/postgresql
          resources:
            requests:
              cpu: "1000m"
              memory: "1Gi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
          securityContext:
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      volumes:
        - name: run
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: initdb
          configMap:
            name: {{ .Release.Name }}-initdb
        - name: library
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-library-0
